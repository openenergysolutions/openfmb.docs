(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{131:function(e,t,n){"use strict";n.d(t,"a",(function(){return m})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),s=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},m=function(e){var t=s(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=s(n),u=r,d=m["".concat(o,".").concat(u)]||m[u]||b[u]||i;return n?a.a.createElement(d,c(c({ref:t},p),{},{components:n})):a.a.createElement(d,c({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var p=2;p<i;p++)o[p]=n[p];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},90:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return s}));var r=n(3),a=n(8),i=(n(0),n(131)),o={sidebar_position:1},c={unversionedId:"hmi/index",id:"hmi/index",isDocsHomePage:!1,title:"Introduction",description:"OpenFMB HMI is a Human Machine Interface web-based application used to design single-line diagrams with control and monitor capabilities.",source:"@site/docs/hmi/index.md",sourceDirName:"hmi",slug:"/hmi/index",permalink:"/docs/hmi/index",editUrl:"https://github.com/openenergysolutions/openfmb.docs/edit/develop/website/docs/hmi/index.md",version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Referenced Setup",permalink:"/docs/adapter-config-tool/reference"},next:{title:"Docker Image",permalink:"/docs/hmi/docker"}},l=[{value:"Overview",id:"overview",children:[]}],p={toc:l};function s(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"OpenFMB HMI is a Human Machine Interface web-based application used to design single-line diagrams with control and monitor capabilities."),Object(i.b)("h2",{id:"overview"},"Overview"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Diagram management"),": "),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"create/update/delete diagrams"),Object(i.b)("li",{parentName:"ul"},"export/import diagram"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Diagram designer"),":"),Object(i.b)("p",{parentName:"li"},"  Design mode is used to design single-line diagrams. Electrical symbols are dragged and dropped into the design canvas. Symbols are then connected together to make a meaningful single- line diagrams representing an electrical distribution infrastructure. Symbols can then be mapped to specific OpenFMB data points for the real-time display of information from microgrids, substations, etc.   ")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Run-time mode"),": "),Object(i.b)("p",{parentName:"li"},"  Run-time mode is diagrams in action supervising data and/or controlling the underlined microgrid or substations. ")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"User management"),": "),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"create/update/delete users")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"role assignment"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"viewer role: read-only")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"engineer role: viewer role + create diagram")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"admin role: engineer role + user management"))))))))}s.isMDXComponent=!0}}]);