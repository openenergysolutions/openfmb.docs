(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{110:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return p}));var r=n(3),i=n(7),a=(n(0),n(120)),o={sidebar_position:3},c={unversionedId:"adapter/native-plugins/dds",id:"adapter/native-plugins/dds",isDocsHomePage:!1,title:"DDS",description:"DDS is a standard protocol providing",source:"@site/docs/adapter/native-plugins/dds.md",sourceDirName:"adapter/native-plugins",slug:"/adapter/native-plugins/dds",permalink:"/openfmb.docs/docs/adapter/native-plugins/dds",editUrl:"https://github.com/openenergysolutions/openfmb.docs/edit/develop/website/docs/adapter/native-plugins/dds.md",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"MQTT",permalink:"/openfmb.docs/docs/adapter/native-plugins/mqtt"},next:{title:"Modbus Master",permalink:"/openfmb.docs/docs/adapter/protocol-plugins/modbus/master"}},s=[{value:"RTI DDS",id:"rti-dds",children:[{value:"Configuration",id:"configuration",children:[]}]}],l={toc:s};function p(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://www.dds-foundation.org/"},"DDS")," is a standard protocol providing\nlow-latency data connectivity with optional extreme reliability for\nmission-critical IoT applications. It is mainly used domains like aerospace,\ndefense, ATC, robotics and smart grid management."),Object(a.b)("p",null,"There are two implementations for DDS in the adapter and they both use\ncommercial software that requires a license."),Object(a.b)("h2",{id:"rti-dds"},"RTI DDS"),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"dds-rti")," implementation uses ",Object(a.b)("a",{parentName:"p",href:"https://www.rti.com/"},"RTI Connext DDS")," 6.0.0.\nIn order to run this configuration, you need a proper license installed (a\n",Object(a.b)("inlineCode",{parentName:"p"},"rti_license.dat")," file). The Docker images provide a working license."),Object(a.b)("h3",{id:"configuration"},"Configuration"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-yaml"},'dds-rti:\n  enabled: true\n  domain-id: 0\n  publish:  # to the DDS broker\n    - profile: SwitchReadingProfile\n      subject: "*"  # * or an mRID\n    - profile: SwitchStatusProfile\n      subject: "87c73d56-b9ab-4a5c-8cd6-cf603490e3e4"  # * or an mRID\n  subscribe:  # from the DDS broker\n    - profile: SwitchControlProfile\n      subject: "*"  # * or an mRID\n')),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"domain-id"),": DDS domain identifier"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"publish"),": a list of profiles to publish to the DDS broker"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"subscribe"),": a list of profiles to read from the DDS broker")),Object(a.b)("p",null,"For each profile, a subject is specified. ",Object(a.b)("inlineCode",{parentName:"p"},"*")," means it will subscribe/publish\nall messages. Otherwise, a mRID can be specified to limit to certain devices."))}p.isMDXComponent=!0},120:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var r=n(0),i=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=i.a.createContext({}),p=function(e){var t=i.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=p(e.components);return i.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},b=i.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=p(n),b=r,m=d["".concat(o,".").concat(b)]||d[b]||u[b]||a;return n?i.a.createElement(m,c(c({ref:t},l),{},{components:n})):i.a.createElement(m,c({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=b;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var l=2;l<a;l++)o[l]=n[l];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);