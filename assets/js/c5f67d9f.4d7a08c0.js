(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{115:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return p}));var o=n(3),r=n(8),a=(n(0),n(133)),i={sidebar_position:1},l={unversionedId:"openfmb/intro",id:"openfmb/intro",isDocsHomePage:!1,title:"Introduction to OpenFMB (Open Field Message Bus)",description:"OpenFMB is a publish/subscribe protocol with a common data",source:"@site/docs/openfmb/intro.md",sourceDirName:"openfmb",slug:"/openfmb/intro",permalink:"/openfmb.docs/docs/openfmb/intro",editUrl:"https://github.com/openenergysolutions/openfmb.docs/edit/develop/website/docs/openfmb/intro.md",version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Referenced Setup",permalink:"/openfmb.docs/docs/openfmb/reference"}},s=[{value:"Topic Structure",id:"topic-structure",children:[]},{value:"Common Message Information",id:"common-message-information",children:[]},{value:"Message Types",id:"message-types",children:[{value:"Status",id:"status",children:[]},{value:"Event",id:"event",children:[]},{value:"Control",id:"control",children:[]}]},{value:"Modules",id:"modules",children:[]},{value:"OpenFMB in a Nutshell",id:"openfmb-in-a-nutshell",children:[]}],c={toc:s};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://openfmb.io"},"OpenFMB")," is a publish/subscribe protocol with a common data\nmodel derived from IEC 61850. The data model is developed by a coalition and\ndefined in UML using Enterprise Architect. It is rightly named the Platform\nIndependent Model (PIM). OpenFMB provides several potential message encodings\ncalled Platform Specific Models (PSM) (protobufs and DDS currently), and\nsupports several publish/subscribe protocols (MQTT, NATs, DDS)."),Object(a.b)("p",null,"The coalition consists of industry leaders, national labs, and independent\nsoftware and hardware vendors."),Object(a.b)("h2",{id:"topic-structure"},"Topic Structure"),Object(a.b)("p",null,"The topic structure of OpenFMB consists of a common OpenFMB prefix followed\nby the module, message profile, and finally the device id (mRID/UUID)."),Object(a.b)("p",null,"An example topic using MQTT might be"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"openfmb/solarmodule/SolarStatusProfile/540b292a-e600-4ae4-b077-40b892ae6970")),Object(a.b)("p",null,"And the equivalent NATs topic with dot seperators"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"openfmb.solarmodule.SolarStatusProfile.540b292a-e600-4ae4-b077-40b892ae6970")),Object(a.b)("p",null,"This allows for a great deal of flexibility in ",Object(a.b)("em",{parentName:"p"},"what")," each program connected to a\nbus may be interested in publishing or subscribing to, with the potential of\nusing wildcards where useful."),Object(a.b)("h2",{id:"common-message-information"},"Common Message Information"),Object(a.b)("p",null,"Every message contains an mRID (UUID) to identify the device and another for to\nuniquely identify the message. Additionally every message requires a timestamp."),Object(a.b)("h2",{id:"message-types"},"Message Types"),Object(a.b)("p",null,"Messages are of 3 generalized types, Status, Event, and Control."),Object(a.b)("h3",{id:"status"},"Status"),Object(a.b)("p",null,"Status messages are commonly published periodically from each device, they contain\ngeneral state information about the device such as switch state, meter readings,\nstorage state of charge."),Object(a.b)("h3",{id:"event"},"Event"),Object(a.b)("p",null,"A device may autonomously change its state or be asked to do so through a control\nmessage. Event messages are meant to be published upon state changes."),Object(a.b)("h3",{id:"control"},"Control"),Object(a.b)("p",null,"Control messages are aptly named, they are meant to control or modify the state\nof a device."),Object(a.b)("h2",{id:"modules"},"Modules"),Object(a.b)("p",null,"A good number of profiles exist today and are likely to be expanded on to\nencompass the modern world power grids live in. A variety of loads, sources,\nstorage, switching, controls and more."),Object(a.b)("p",null,"Some of the useful modules that OpenFMB provides"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Breaker"),Object(a.b)("li",{parentName:"ul"},"Cap Bank"),Object(a.b)("li",{parentName:"ul"},"ESS"),Object(a.b)("li",{parentName:"ul"},"Generation "),Object(a.b)("li",{parentName:"ul"},"Interconnection"),Object(a.b)("li",{parentName:"ul"},"Load"),Object(a.b)("li",{parentName:"ul"},"Meter"),Object(a.b)("li",{parentName:"ul"},"Recloser"),Object(a.b)("li",{parentName:"ul"},"Regulator"),Object(a.b)("li",{parentName:"ul"},"Reserve"),Object(a.b)("li",{parentName:"ul"},"Resource"),Object(a.b)("li",{parentName:"ul"},"Solar"),Object(a.b)("li",{parentName:"ul"},"Switch")),Object(a.b)("p",null,"Exploring the messages, their UML and attributes is highly encouraged to get a\nsense of what each can do."),Object(a.b)("h2",{id:"openfmb-in-a-nutshell"},"OpenFMB in a Nutshell"),Object(a.b)("p",null,"A data model to support sharing information among devices and controllers with\ncommon message formats and protocols."))}p.isMDXComponent=!0},133:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var o=n(0),r=n.n(o);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),p=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),d=o,m=u["".concat(i,".").concat(d)]||u[d]||b[d]||a;return n?r.a.createElement(m,l(l({ref:t},c),{},{components:n})):r.a.createElement(m,l({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);