(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{133:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var b=o.a.createContext({}),p=function(e){var t=o.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=p(e.components);return o.a.createElement(b.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,b=c(e,["components","mdxType","originalType","parentName"]),s=p(n),d=r,m=s["".concat(i,".").concat(d)]||s[d]||u[d]||a;return n?o.a.createElement(m,l(l({ref:t},b),{},{components:n})):o.a.createElement(m,l({ref:t},b))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var b=2;b<a;b++)i[b]=n[b];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},200:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/microgrid-fd19899ed9fbe9f3358d9cc60ace9d5f.png"},90:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return p}));var r=n(3),o=n(8),a=(n(0),n(133)),i={sidebar_position:2},l={unversionedId:"openfmb/reference",id:"openfmb/reference",isDocsHomePage:!1,title:"Reference Setup",description:"In this reference setup you will see how to use OpenFMB with open source software",source:"@site/docs/openfmb/reference.md",sourceDirName:"openfmb",slug:"/openfmb/reference",permalink:"/openfmb.docs/docs/openfmb/reference",editUrl:"https://github.com/openenergysolutions/openfmb.docs/edit/develop/website/docs/openfmb/reference.md",version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"OpenFMB",permalink:"/openfmb.docs/docs/openfmb/intro"},next:{title:"Introduction",permalink:"/openfmb.docs/docs/adapter/index"}},c=[{value:"Installing Docker Compose",id:"installing-docker-compose",children:[]},{value:"Get The Demo Configuration",id:"get-the-demo-configuration",children:[]},{value:"Running the Demo",id:"running-the-demo",children:[]},{value:"Overview",id:"overview",children:[]},{value:"Basic Microgrid",id:"basic-microgrid",children:[]},{value:"OpenFMB Profiles",id:"openfmb-profiles",children:[]},{value:"Device MRID",id:"device-mrid",children:[]}],b={toc:c};function p(e){var t=e.components,i=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},b,i,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"In this reference setup you will see how to use OpenFMB with open source software\nfrom ",Object(a.b)("a",{parentName:"p",href:"https://openenergysolutionsinc.com"},"Open Energy Solutions Inc"),"."),Object(a.b)("p",null,"The reference setup uses Docker and Docker Compose to run several\npre-built docker images containing open source software developed by Open Energy\nSolutions and others."),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"A ",Object(a.b)("a",{parentName:"li",href:"https://nats.io"},"nats")," message broker"),Object(a.b)("li",{parentName:"ol"},"A ",Object(a.b)("a",{parentName:"li",href:"https://github.com/openenergysolutions/openfmb.adapters"},"openfmb.adapter")," replaying pre-recorded data"),Object(a.b)("li",{parentName:"ol"},"A ",Object(a.b)("a",{parentName:"li",href:"https://github.com/openenergysolutions/openfmb.hmi"},"openfmb.hmi")," HMI for visualizing and displaying the data coming from the adapter over NATS.")),Object(a.b)("h2",{id:"installing-docker-compose"},"Installing Docker Compose"),Object(a.b)("p",null,"In order to run the demonstration you will need Docker and Docker Compose"),Object(a.b)("p",null,"Installing Docker Compose can be done by following the instructions at"),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://docs.docker.com/compose/install/"},"Install Docker Compose")),Object(a.b)("h2",{id:"get-the-demo-configuration"},"Get The Demo Configuration"),Object(a.b)("p",null,"Next an archive of the demonstration setup can be obtained "),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://github.com/openenergysolutions/openfmb.demo/archive/refs/heads/develop.zip"},"Download Archive")),Object(a.b)("h2",{id:"running-the-demo"},"Running the Demo"),Object(a.b)("p",null,"Once you have the demo zip file, unzip it in a place of your choosing."),Object(a.b)("p",null,"In Linux or Mac open a terminal. On windows open the command line. cd into the unzipped demo directory and simply run"),Object(a.b)("p",null,"docker-compose up"),Object(a.b)("p",null,"At this point the demo setup should be running."),Object(a.b)("h2",{id:"overview"},"Overview"),Object(a.b)("p",null,"The following steps are progressed to the referenced setup:"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Identify the electrical equipment and how they are connected (see ",Object(a.b)("a",{parentName:"p",href:"reference#basic-microgrid"},"below"),")")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Identify the OpenFMB profiles to be used (see ",Object(a.b)("a",{parentName:"p",href:"reference#openfmb-profiles"},"below"),")")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Gather DNP3/MODBUS point list for each equipment ")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Configure the adapters (see ",Object(a.b)("a",{parentName:"p",href:"../adapter-config-tool/reference"},"Adapter Config Tool"),")")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Build the single-line diagram (see ",Object(a.b)("a",{parentName:"p",href:"../hmi/sld"},"HMI"),")")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Stand up a ",Object(a.b)("a",{parentName:"p",href:"https://nats.io"},"NATS")," broker")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Run the adapters (see ",Object(a.b)("a",{parentName:"p",href:"../adapter/index"},"Adapter"),")")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Run the HMI (see ",Object(a.b)("a",{parentName:"p",href:"../hmi/run"},"HMI"),")"))),Object(a.b)("h2",{id:"basic-microgrid"},"Basic Microgrid"),Object(a.b)("p",null,"A typical scheme of an electrical based microgrid with solar as renewable energy resource would be:"),Object(a.b)("p",null,Object(a.b)("img",{src:n(200).default})),Object(a.b)("p",null,"There are four electrical equipment to represent on the single-line diagram.  Note that for simplicity, we don't need to draw any of the transformers nor AC/DC converters."),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Building Load: power consumption"),Object(a.b)("li",{parentName:"ul"},"Solar PV: power production from solar panels"),Object(a.b)("li",{parentName:"ul"},"Battery Energy Storage: charge from solar and discharge to supply power"),Object(a.b)("li",{parentName:"ul"},"Switch (isolator) at PCC (Point of Common Coupling): connect and disconnect to larger distribution grid")),Object(a.b)("p",null,"We want to design our single-line diagram such that an operator can:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Monitor the power consumption"),Object(a.b)("li",{parentName:"ul"},"Monitor the power production from solar"),Object(a.b)("li",{parentName:"ul"},"Monitor the State of Charge (SOC) of the battery"),Object(a.b)("li",{parentName:"ul"},"Island or reconnect to distribution grid")),Object(a.b)("h2",{id:"openfmb-profiles"},"OpenFMB Profiles"),Object(a.b)("p",null,"The following OpenFMB profiles are being used for this referenced setup:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Build Load:",Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},Object(a.b)("ins",null,"MeterReadingProfile"),": provides kW being consumed by the building"))),Object(a.b)("li",{parentName:"ul"},"Solar PV:",Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},Object(a.b)("ins",null,"SolarStatusProfile"),": provides the current state of the solar system (either On or Off)"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("ins",null,"SolarReadingProfile"),": provides kW being produced by the solar system"))),Object(a.b)("li",{parentName:"ul"},"Battery Energy Storage:",Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},Object(a.b)("ins",null,"ESSStatusProfile"),": provides current state (On/Off) and mode (ISO/PQ) of the battery"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("ins",null,"ESSReadingProfile"),": provides charge/discharge kW by the battery"))),Object(a.b)("li",{parentName:"ul"},"Switch (Isolator): ",Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},Object(a.b)("ins",null,"SwitchStatusProfile"),": provides current switch position (Open/Close)"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("ins",null,"SwitchReadingProfile"),": provides kW being imported or exported to the distributed grid")))),Object(a.b)("h2",{id:"device-mrid"},"Device MRID"),Object(a.b)("p",null,"In this referenced setup, we use the following MRIDs:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Building Load Metering: ",Object(a.b)("inlineCode",{parentName:"li"},"0648ef71-cb63-4347-921a-9dbf178da687")),Object(a.b)("li",{parentName:"ul"},"Solar PV: ",Object(a.b)("inlineCode",{parentName:"li"},"540b292a-e600-4ae4-b077-40b892ae6970")),Object(a.b)("li",{parentName:"ul"},"Battery Energy Storage: ",Object(a.b)("inlineCode",{parentName:"li"},"836a8638-b448-4961-8258-47aa18e05f65")),Object(a.b)("li",{parentName:"ul"},"Switch (isolator) at PCC: ",Object(a.b)("inlineCode",{parentName:"li"},"e6768784-48ad-40e9-af2a-9676413d4d6a"))))}p.isMDXComponent=!0}}]);