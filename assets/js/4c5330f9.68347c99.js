(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{131:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),b=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=b(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),u=b(n),d=a,m=u["".concat(c,".").concat(d)]||u[d]||p[d]||i;return n?r.a.createElement(m,s(s({ref:t},l),{},{components:n})):r.a.createElement(m,s({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,c=new Array(i);c[0]=d;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:a,c[1]=s;for(var l=2;l<i;l++)c[l]=n[l];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},87:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return o})),n.d(t,"default",(function(){return b}));var a=n(3),r=n(8),i=(n(0),n(131)),c={sidebar_position:1},s={unversionedId:"adapter/native-plugins/nats",id:"adapter/native-plugins/nats",isDocsHomePage:!1,title:"NATS",description:"NATS is a lightweight messaging protocol that can used can",source:"@site/docs/adapter/native-plugins/nats.md",sourceDirName:"adapter/native-plugins",slug:"/adapter/native-plugins/nats",permalink:"/openfmb.docs/docs/adapter/native-plugins/nats",editUrl:"https://github.com/openenergysolutions/openfmb.docs/edit/develop/website/docs/adapter/native-plugins/nats.md",version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Configuration",permalink:"/openfmb.docs/docs/adapter/config"},next:{title:"MQTT",permalink:"/openfmb.docs/docs/adapter/native-plugins/mqtt"}},o=[{value:"Configuration",id:"configuration",children:[]},{value:"Security",id:"security",children:[{value:"Server authentication + user/password",id:"server-authentication--userpassword",children:[]},{value:"TLS mutual authentication",id:"tls-mutual-authentication",children:[]},{value:"JWTs",id:"jwts",children:[]}]}],l={toc:o};function b(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,Object(i.b)("a",{parentName:"p",href:"https://nats.io/"},"NATS")," is a lightweight messaging protocol that can used can\nbe used to publish/suscribe OpenFMB profiles to/from a NATS server."),Object(i.b)("p",null,"NATS uses the a topic hierarchy delimited by periods. Within the context of\nOpenFMB, the topic name takes the follwing form:"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"openfmb.<module name>.<profile name>.<subject name>")),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"<subject name>")," may be a the ",Object(i.b)("inlineCode",{parentName:"p"},"*")," wildcard or the ConductingEquipment\n",Object(i.b)("inlineCode",{parentName:"p"},"mRID"),". All messages published to the NATS server will use the fully qualified\ntopic name including the mRID."),Object(i.b)("h2",{id:"configuration"},"Configuration"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-yaml"},'nats:\n  enabled: true\n  max-queued-messages: 100  # how many messages to buffer before discarding the oldest\n  connect-url: nats://localhost:4222\n  connect-retry-seconds: 5\n  security:\n    security-type: none\n  publish:  # to the NATs broker\n    - profile: SwitchReadingProfile\n      subject: "*"  # * or an mRID\n    - profile: SwitchStatusProfile\n      subject: "87c73d56-b9ab-4a5c-8cd6-cf603490e3e4"  # * or an mRID\n  subscribe:  # from the NATs broker\n    - profile: SwitchControlProfile\n      subject: "*"  # * or an mRID\n')),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Parameter"),Object(i.b)("th",{parentName:"tr",align:null},"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"enabled"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"true")," to enable NATS plugin, ",Object(i.b)("inlineCode",{parentName:"td"},"false")," to disable.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"max-queued-messages"),Object(i.b)("td",{parentName:"tr",align:null},"Number of messages to keep in the publishing queue before discarding the oldest.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"connect-url"),Object(i.b)("td",{parentName:"tr",align:null},"Connection address of the NATS server. The protocol can be ",Object(i.b)("inlineCode",{parentName:"td"},"nats")," or ",Object(i.b)("inlineCode",{parentName:"td"},"tls"),".")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"connect-retry-seconds"),Object(i.b)("td",{parentName:"tr",align:null},"Number of seconds to wait before trying to re-establish a connection to the server.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"security"),Object(i.b)("td",{parentName:"tr",align:null},"See ",Object(i.b)("a",{parentName:"td",href:"#security"},"Security"),".")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"publish"),Object(i.b)("td",{parentName:"tr",align:null},"List of profiles to publish to NATS server (from the internal bus to NATS)")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"subscribe"),Object(i.b)("td",{parentName:"tr",align:null},"List of profiles to subscribe from the NATS server (from NATS to the internal bus)")))),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"publish")," and ",Object(i.b)("inlineCode",{parentName:"p"},"subscribe")," section specify lists of profiles. The profile\nname (",Object(i.b)("inlineCode",{parentName:"p"},"profile"),") and which equipment you want to publish/subscribe to\n(",Object(i.b)("inlineCode",{parentName:"p"},"subject"),"). The subject name can either be ",Object(i.b)("inlineCode",{parentName:"p"},"*")," to publish/subscribe to all the\nprofiles, or a specific ConductingEquipment mRID."),Object(i.b)("h2",{id:"security"},"Security"),Object(i.b)("p",null,"The connection to a NATS server may optionally be secured using TLS."),Object(i.b)("p",null,"The required contents of the ",Object(i.b)("inlineCode",{parentName:"p"},"security")," section depends on the value of\n",Object(i.b)("inlineCode",{parentName:"p"},"security-type"),"."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-yaml",metastring:'tab="none"',tab:'"none"'},"security:\n  security-type: none\n")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-yaml",metastring:'tab="tls_server_auth"',tab:'"tls_server_auth"'},"security:\n  security-type: tls_server_auth\n  ca-trusted-cert-file: server_cert.pem\n")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-yaml",metastring:'tab="tls_mutual_auth"',tab:'"tls_mutual_auth"'},"security:\n  security-type: tls_mutual_auth\n  ca-trusted-cert-file: server_cert.pem\n  client-private-key-file: client_key.pem\n  client-cert-chain-file: client_cert.pem\n")),Object(i.b)("p",null,"If no security is needed, the ",Object(i.b)("inlineCode",{parentName:"p"},"security-type")," can be set to ",Object(i.b)("inlineCode",{parentName:"p"},"none"),"."),Object(i.b)("p",null,"To learn how to produce self-signed certificates with OpenSSL, check\n",Object(i.b)("a",{parentName:"p",href:"/openfmb.docs/docs/adapter/misc/self-signed"},"Self-signed certificates"),"."),Object(i.b)("h3",{id:"server-authentication--userpassword"},"Server authentication + user/password"),Object(i.b)("p",null,"In this mode, the client authenticates the server using a certificate, and then\nthe server authenticates the client using a user name and password sent over the\nencrypted TLS channel."),Object(i.b)("p",null,"Authorization for each user can be specified in the config file of the NATS\nserver. See ",Object(i.b)("a",{parentName:"p",href:"https://docs.nats.io/nats-server/configuration/securing_nats/authorization"},"this page"),"\nfor more details."),Object(i.b)("p",null,"The server must run with a TLS certificate, a username and a password in this\nmode:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"> nats-server --tls --tlscert ~/certs/server_cert.pem --tlskey ~/certs/server_key.pem --user username --pass password\n")),Object(i.b)("p",null,"The adapter is configured to authenticate the server using a trusted root\ncertificate or self-signed certificate of the broker. The username and the\npassword are embedded in the connection URL."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-yaml"},"nats:\n  enabled: true\n  max-queued-messages: 100  # how many messages to buffer before discarding the oldest\n  connect-url: nats://username:password@localhost:4222\n  connect-retry-seconds: 5\n  security:\n    security-type: tls_server_auth\n    ca-trusted-cert-file: server_cert.pem\n  # ...\n")),Object(i.b)("h3",{id:"tls-mutual-authentication"},"TLS mutual authentication"),Object(i.b)("p",null,"In this mode, the client and the server mutually authenticate one another using\ncertificates."),Object(i.b)("p",null,"The server must run with a TLS certificate and must validate the client\ncertificate."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"nats-server --tlsverify --tlscert ~/certs/server_cert.pem --tlskey ~/certs/server_key.pem --tlscacert ~/certs/client_cert.pem\n")),Object(i.b)("p",null,"The adapter is configured to perform mutual authentication and provided with the\npaths to the server cert, the client's private key, and a certificate chain file\nthat, at a minimum, contains the client's self-signed certificate."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-yaml"},"nats:\n  enabled: true\n  max-queued-messages: 100  # how many messages to buffer before discarding the oldest\n  connect-url: nats://localhost:4222\n  connect-retry-seconds: 5\n  security:\n    security-type: tls_mutual_auth\n    ca-trusted-cert-file: server_cert.pem\n    client-private-key-file: client_key.pem\n    client-cert-chain-file: client_cert.pem\n  # ...\n")),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"The username/password is not required when using TLS mutual authentication to be secure, but the two modes are also not mutually exclusive. You can do server-only authentication without any credentials (client not authenticated) and you can require username/password server-side even with TLS mutual authentication."))),Object(i.b)("h3",{id:"jwts"},"JWTs"),Object(i.b)("p",null,"A NATS client can prove its permission to the server by providing a JSON Web\nToken (JWT). It is possible to specify the token with the ",Object(i.b)("inlineCode",{parentName:"p"},"jwt-creds-file"),"\nparameter. This feature can be used alone, with server-only authentication, or\nwith mutual authentication."),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"Using JWT only ensures that the client has permissions attested to with the token. It does not protect the communications from tampering or inspection in the same way that TLS does."))),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-yaml"},"nats:\n  enabled: true\n  max-queued-messages: 100  # how many messages to buffer before discarding the oldest\n  connect-url: nats://localhost:4222\n  connect-retry-seconds: 5\n  security:\n    security-type: none\n    jwt-creds-file: C:/Users/johndoe/.nkeys/OperatorName/accounts/AccountName/users/UserName.creds\n")),Object(i.b)("p",null,"The NATS server must be configured to authenticate the JWT with the appropriate\nkey and know all the accounts that exist."),Object(i.b)("h4",{id:"static-accounts-configuration"},"Static accounts configuration"),Object(i.b)("p",null,"To statically list all the accounts, run the following:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"nsc generate config --mem-resolver --config-file auth.conf --operator-jwt operator.jwt\n")),Object(i.b)("p",null,"It will generate a ",Object(i.b)("inlineCode",{parentName:"p"},"auth.conf")," similar to this:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},'operator: "D:\\\\Desktop\\\\openfmb_deps\\\\operator.jwt"\nresolver: MEMORY\nresolver_preload: {\n  ABN6Q3CJCJD6IV3WYASVHK4WGEHO6GNKLK5SRVFBXZL2XQB6UXLFIATQ: eyJ0eXAiOiJqd3QiLCJhbGciOiJlZDI1NTE5In0.eyJqdGkiOiJPTVZBVlpUTUZOSEtGU0lIQVhDTUFRWVZYVjNXUE5NUjdMVkVJV1FIQVlKMktHVVdUQ0pBIiwiaWF0IjoxNTY1ODc1NzM4LCJpc3MiOiJPQk1WU0VYNFZST1ZOUjNKSFlFWU1BRjNNWDdFN1dKSkROUVFCTU1WRDI1MlJNWkc2SzVLMkhWWCIsIm5hbWUiOiJUZXN0QWNjb3VudCIsInN1YiI6IkFCTjZRM0NKQ0pENklWM1dZQVNWSEs0V0dFSE82R05LTEs1U1JWRkJYWkwyWFFCNlVYTEZJQVRRIiwidHlwZSI6ImFjY291bnQiLCJuYXRzIjp7ImxpbWl0cyI6eyJzdWJzIjotMSwiY29ubiI6LTEsImxlYWYiOi0xLCJpbXBvcnRzIjotMSwiZXhwb3J0cyI6LTEsImRhdGEiOi0xLCJwYXlsb2FkIjotMSwid2lsZGNhcmRzIjp0cnVlfX19.POiZG4gp0EOy0mjF6MhHG1stGyR7iR6DQVYP2v3h2ZE1Hr1hM2CVcHC0g2fE572jNXIrUyLLIw0_8hUXJvQNCQ\n}\n')),Object(i.b)("p",null,"Simply include it in the NATS main config file:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"include ./auth.conf\n")),Object(i.b)("h4",{id:"using-an-external-account-resolver"},"Using an external account resolver"),Object(i.b)("p",null,"A ready-to-use HTTP account resolver is available here:\n(",Object(i.b)("a",{parentName:"p",href:"https://github.com/nats-io/nats-account-server"},"https://github.com/nats-io/nats-account-server"),")"),Object(i.b)("p",null,"In the NATS config file, add the following lines:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"operator: C:\\\\Users\\\\johndoe\\\\.nkeys\\\\OperatorName\\\\OperatorName.jwt\nresolver: URL(http://localhost:9090/jwt/v1/accounts/)\n")))}b.isMDXComponent=!0}}]);